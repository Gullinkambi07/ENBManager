<UserControl x:Class="ENBManager.Modules.Shared.Views.AddPresetDialog"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:prism="http://prismlibrary.com/"
             xmlns:const="clr-namespace:ENBManager.Infrastructure.Constants;assembly=ENBManager.Infrastructure"
             xmlns:loc="clr-namespace:ENBManager.Localization.Strings;assembly=ENBManager.Localization"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:models="clr-namespace:ENBManager.Infrastructure.BusinessEntities;assembly=ENBManager.Infrastructure"
             xmlns:vc="clr-namespace:ENBManager.Infrastructure.ValueConverters;assembly=ENBManager.Infrastructure"
             mc:Ignorable="d" 
             prism:ViewModelLocator.AutoWireViewModel="True"
             Background="{DynamicResource MaterialDesignPaper}"
             TextElement.Foreground="{DynamicResource MaterialDesignBody}"
             TextElement.FontSize="18"
             Width="600" Height="800">

    <UserControl.Resources>

        <HierarchicalDataTemplate DataType="{x:Type models:DirectoryNode}"
                                  ItemsSource="{Binding Items}">
            <StackPanel Orientation="Horizontal"
                        IsHitTestVisible="False">
                <materialDesign:PackIcon Kind="FolderOutline"
                                         Width="20"
                                         Height="20"/>
                <TextBlock Text="{Binding Path=Name}"
                           Style="{StaticResource MaterialDesignBody2TextBlock}"
                           Margin="5 0 0 0" />
            </StackPanel>
        </HierarchicalDataTemplate>

        <DataTemplate DataType="{x:Type models:FileNode}">
            <StackPanel Orientation="Horizontal">
                <materialDesign:PackIcon Kind="FileOutline"
                                         Width="20"
                                         Height="20"/>
                <TextBlock Text="{Binding Path=Name}"
                           Style="{StaticResource MaterialDesignBody2TextBlock}"
                           Margin="5 0 0 0" />
            </StackPanel>
        </DataTemplate>

        <vc:EmptyCollectionToVisibilityValueConverter x:Key="EmptyCollectionToVisibilityValueConverter" />

    </UserControl.Resources>

    <prism:Dialog.WindowStyle>
        <Style TargetType="{x:Type Window}">
            <Setter Property="prism:Dialog.WindowStartupLocation" Value="CenterScreen" />
            <Setter Property="ShowInTaskbar" Value="True"/>
            <Setter Property="ResizeMode" Value="NoResize"/>
            <Setter Property="SizeToContent" Value="WidthAndHeight"/>
        </Style>
    </prism:Dialog.WindowStyle>

    <materialDesign:DialogHost CloseOnClickAway="False"
                               Identifier="{x:Static const:RegionNames.AddPresetDialogHost}">

        <materialDesign:DialogHost.Resources>
            <ResourceDictionary>
                <ResourceDictionary.MergedDictionaries>
                    <ResourceDictionary Source="pack://application:,,,/ENBManager.Infrastructure;component/Resources/Dialogs/Dialogs.xaml" />
                </ResourceDictionary.MergedDictionaries>
            </ResourceDictionary>
        </materialDesign:DialogHost.Resources>

        <DockPanel LastChildFill="True">

            <!-- Title -->
            <StackPanel DockPanel.Dock="Top"
                        Margin="0 20 0 0"
                        FocusManager.FocusedElement="{Binding ElementName=PresetNameTextBlock}">

                <TextBlock Style="{StaticResource MaterialDesignHeadline4TextBlock}" 
                           Text="{x:Static loc:Strings.ADD_NEW_PRESET}"
                           HorizontalAlignment="Center" />

            </StackPanel>

            <!-- Actions -->
            <StackPanel DockPanel.Dock="Bottom"
                        Orientation="Horizontal"
                        HorizontalAlignment="Right"
                        Margin="20">

                <!-- Save -->
                <Button Content="{x:Static loc:Strings.SAVE}"
                        Command="{Binding SaveCommand}"
                        Margin="0 0 10 0" />

                <!-- Cancel -->
                <Button Content="{x:Static loc:Strings.CANCEL}"
                        Style="{StaticResource MaterialDesignOutlinedButton}"
                        Command="{Binding CancelCommand}"/>

            </StackPanel>

            <!-- Form -->
            <Grid Margin="20">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <!-- Name -->
                <TextBox Grid.Row="0"
                         Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"
                         Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                         materialDesign:HintAssist.Hint="{x:Static loc:Strings.ENTER_A_NEW_NAME}"/>

                <!-- Files -->
                <Grid Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0"
                          Margin="0 20 0 0">
                        <TextBlock Text="{x:Static loc:Strings.FILES}"
                                   Style="{StaticResource MaterialDesignHeadline5TextBlock}"/>
                    </Grid>

                    <DockPanel Grid.Row="1"
                               Margin="0 10 0 20">

                        <StackPanel DockPanel.Dock="Left">
                            <Button Content="{x:Static loc:Strings.BROWSE}"
                                    Command="{Binding BrowseFolderCommand}"/>
                        </StackPanel>

                        <StackPanel DockPanel.Dock="Right"
                                    HorizontalAlignment="Right">
                            <Button Content="{x:Static loc:Strings.SET_ROOT}"
                                    Style="{DynamicResource MaterialDesignRaisedAccentButton}"
                                    Command="{Binding SetRootDirectoryCommand}"
                                    ToolTip="{x:Static loc:Strings.SET_ROOT_TOOLTIP_TEXT}"/>
                        </StackPanel>

                    </DockPanel>

                    <Border Grid.Row="2"
                            Padding="10"
                            Background="{DynamicResource AttentionToActionBrush}">

                        <Grid>
                            <TextBlock Text="{x:Static loc:Strings.EMPTY}"
                                       Style="{StaticResource MaterialDesignHeadline2TextBlock}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       Visibility="{Binding Items, Converter={StaticResource EmptyCollectionToVisibilityValueConverter}}"/>

                            <TreeView ItemsSource="{Binding Items}"
                                      HorizontalAlignment="Stretch">
                                <TreeView.Resources>
                                    <ContextMenu x:Key="TreeViewItemContextMenu">
                                        <MenuItem Header="{x:Static loc:Strings.DELETE}"
                                                  Command="{Binding DataContext.DeleteNodeCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                                  CommandParameter="{Binding .}"/>
                                    </ContextMenu>
                                </TreeView.Resources>
                                <TreeView.ItemContainerStyle>
                                    <Style TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                        <Setter Property="ContextMenu" Value="{StaticResource TreeViewItemContextMenu}" />
                                    </Style>
                                </TreeView.ItemContainerStyle>
                            </TreeView>
                        </Grid>

                    </Border>

                </Grid>

            </Grid>

        </DockPanel>
    </materialDesign:DialogHost>

</UserControl>
